//
//  HTMLElements.cpp
//  XTBook
//
//  Created by Nexhawks on 4/27/11.
//  Copyright 2011 Nexhawks. All rights reserved.
//
/*
 * This file is part of XTBook.
 *
 * XTBook is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * XTBook is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with XTBook.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "HTMLElements.h"


#include "../OptimizedBranch/OBSelector.h"

static const OBNode HTMLElementNodes[]={
	{0x0001, 0x0062, 0x800a, 0x8001}, {0x0001, 0x0063, 0x8046, 0x8002}, 
	{0x0002, 0x006b, 0x8004, 0x8003}, {0x0002, 0x0073, 0x8005, 0x8007}, 
	{0x0001, 0x0064, 0x0002, 0x8006}, {0x0001, 0x006a, 0x800d, 0x800f}, 
	{0x0001, 0x006b, 0x800e, 0x8008}, {0x0001, 0x006b, 0x8017, 0x8013}, 
	{0x0001, 0x0073, 0x8011, 0x8009}, {0x0001, 0x0074, 0x8045, 0x8027}, 
	{0x0000, 0x0062, 0x0000, 0x800b}, {0x0001, 0x0061, 0x8033, 0x800c}, 
	{0x0004, 0x0066, 0x8014, 0x8015}, {0x0000, 0x0062, 0x0003, 0x8016}, 
	{0x0000, 0x0062, 0x0005, 0x801d}, {0x0000, 0x0062, 0x0006, 0x8010}, 
	{0x0005, 0x006a, 0x8019, 0x801a}, {0x0000, 0x0062, 0x0007, 0x8012}, 
	{0x0001, 0x0071, 0x8018, 0x8030}, {0x0000, 0x0062, 0x0008, 0x8043}, 
	{0x0000, 0x0063, 0x000c, 0x8050}, {0x0000, 0x0063, 0x000d, 0x801c}, 
	{0x0000, 0x0063, 0x000e, 0x801e}, {0x0000, 0x0062, 0x0004, 0x8020}, 
	{0x0000, 0x0063, 0x0012, 0x8026}, {0x0000, 0x0063, 0x0010, 0x802d}, 
	{0x0000, 0x0063, 0x0011, 0x801b}, {0x0002, 0x006d, 0x001b, 0x802e}, 
	{0x0000, 0x0064, 0x0016, 0x8049}, {0x0000, 0x0063, 0x000f, 0x8022}, 
	{0x0000, 0x0064, 0x0017, 0x801f}, {0x0003, 0x0065, 0x8021, 0x803c}, 
	{0x0000, 0x0064, 0x0018, 0x8024}, {0x0001, 0x0066, 0x8079, 0x8023}, 
	{0x0001, 0x0067, 0x803a, 0x802a}, {0x0001, 0x0068, 0x8040, 0x0024}, 
	{0x0001, 0x0067, 0x8047, 0x8025}, {0x0002, 0x0075, 0x804d, 0x0026}, 
	{0x0000, 0x0064, 0x0019, 0x8028}, {0x0000, 0x0063, 0x000a, 0x806f}, 
	{0x0000, 0x0065, 0x0027, 0x8029}, {0x0002, 0x0062, 0x804f, 0x8041}, 
	{0x0000, 0x0065, 0x0023, 0x802b}, {0x0002, 0x0066, 0x804b, 0x802c}, 
	{0x0003, 0x006c, 0x002c, 0x002d}, {0x0000, 0x0065, 0x001a, 0x802f}, 
	{0x0000, 0x0065, 0x001c, 0x8087}, {0x0002, 0x0070, 0x8032, 0x8042}, 
	{0x0000, 0x0064, 0x0013, 0x8031}, {0x0005, 0x0073, 0x803d, 0x0032}, 
	{0x0000, 0x0067, 0x002e, 0x803e}, {0x0000, 0x0065, 0x000b, 0x8034}, 
	{0x0001, 0x0031, 0x803f, 0x8035}, {0x0001, 0x0032, 0x0035, 0x8036}, 
	{0x0001, 0x0033, 0x0036, 0x8037}, {0x0001, 0x0034, 0x0037, 0x8038}, 
	{0x0001, 0x0035, 0x0038, 0x8039}, {0x0001, 0x0036, 0x0039, 0x003a}, 
	{0x0000, 0x0066, 0x001e, 0x803b}, {0x0004, 0x0065, 0x808c, 0x804a}, 
	{0x0000, 0x0066, 0x0020, 0x804c}, {0x0000, 0x0067, 0x0031, 0x8062}, 
	{0x0000, 0x0068, 0x0033, 0x8063}, {0x0000, 0x0069, 0x0034, 0x8048}, 
	{0x0000, 0x0067, 0x0022, 0x0041}, {0x0000, 0x0067, 0x002a, 0x8056}, 
	{0x0000, 0x0068, 0x0030, 0x8082}, {0x0000, 0x0066, 0x0014, 0x8044}, 
	{0x0003, 0x0065, 0x8059, 0x805c}, {0x0000, 0x0065, 0x0009, 0x0046}, 
	{0x0000, 0x0066, 0x0001, 0x805a}, {0x0000, 0x0068, 0x0021, 0x8053}, 
	{0x0000, 0x006b, 0x0040, 0x805f}, {0x0000, 0x0068, 0x001d, 0x8060}, 
	{0x0000, 0x006a, 0x003c, 0x8068}, {0x0000, 0x0069, 0x002b, 0x808f}, 
	{0x0000, 0x006a, 0x003d, 0x8052}, {0x0000, 0x0068, 0x0025, 0x804e}, 
	{0x0004, 0x0067, 0x8092, 0x004f}, {0x0000, 0x0069, 0x0029, 0x805b}, 
	{0x0000, 0x0068, 0x0015, 0x8051}, {0x0002, 0x0071, 0x8065, 0x8057}, 
	{0x0000, 0x006d, 0x004d, 0x806b}, {0x0000, 0x006c, 0x0048, 0x8054}, 
	{0x0002, 0x0074, 0x806c, 0x8055}, {0x0003, 0x0063, 0x806d, 0x807b}, 
	{0x0000, 0x006b, 0x0042, 0x8058}, {0x0000, 0x006e, 0x0052, 0x809a}, 
	{0x0000, 0x006e, 0x0057, 0x0059}, {0x0000, 0x006c, 0x0044, 0x005a}, 
	{0x0000, 0x006d, 0x0047, 0x8066}, {0x0000, 0x006e, 0x0050, 0x8061}, 
	{0x0000, 0x006c, 0x0045, 0x805d}, {0x0003, 0x0068, 0x005d, 0x805e}, 
	{0x0001, 0x0073, 0x807f, 0x8084}, {0x0000, 0x006e, 0x0049, 0x8064}, 
	{0x0000, 0x006e, 0x004a, 0x0061}, {0x0000, 0x0070, 0x005c, 0x806e}, 
	{0x0000, 0x006c, 0x003e, 0x8093}, {0x0000, 0x006c, 0x003f, 0x8099}, 
	{0x0000, 0x0071, 0x0060, 0x8072}, {0x0000, 0x0070, 0x0051, 0x8073}, 
	{0x0000, 0x0071, 0x005b, 0x8067}, {0x0002, 0x0063, 0x0067, 0x808b}, 
	{0x0000, 0x006f, 0x004b, 0x8069}, {0x0002, 0x0063, 0x0069, 0x806a}, 
	{0x0002, 0x0065, 0x8075, 0x006b}, {0x0000, 0x0070, 0x0053, 0x8074}, 
	{0x0000, 0x0070, 0x0054, 0x006d}, {0x0000, 0x0070, 0x0055, 0x006e}, 
	{0x0000, 0x0071, 0x0062, 0x807e}, {0x0000, 0x006b, 0x0028, 0x8070}, 
	{0x0002, 0x0063, 0x8071, 0x8089}, {0x0001, 0x0075, 0x8081, 0x8085}, 
	{0x0000, 0x0072, 0x0065, 0x8097}, {0x0000, 0x0073, 0x0066, 0x808a}, 
	{0x0000, 0x0073, 0x006c, 0x8077}, {0x0000, 0x0073, 0x006a, 0x8076}, 
	{0x0003, 0x0073, 0x0076, 0x0077}, {0x0001, 0x0064, 0x0075, 0x8078}, 
	{0x0006, 0x0031, 0x808e, 0x0079}, {0x0000, 0x006c, 0x001f, 0x807a}, 
	{0x0002, 0x006f, 0x007a, 0x007b}, {0x0000, 0x0070, 0x0056, 0x807c}, 
	{0x0003, 0x0068, 0x007c, 0x807d}, {0x0003, 0x0070, 0x007d, 0x808d}, 
	{0x0000, 0x0073, 0x006f, 0x8080}, {0x0000, 0x0071, 0x005e, 0x0080}, 
	{0x0001, 0x006f, 0x8098, 0x0081}, {0x0000, 0x0073, 0x0070, 0x8096}, 
	{0x0000, 0x006e, 0x0043, 0x8083}, {0x0003, 0x006c, 0x8088, 0x0084}, 
	{0x0000, 0x0071, 0x005f, 0x0085}, {0x0000, 0x0073, 0x0072, 0x8086}, 
	{0x0003, 0x006d, 0x0086, 0x0087}, {0x0000, 0x006d, 0x002f, 0x0088}, 
	{0x0001, 0x0075, 0x809d, 0x0089}, {0x0000, 0x0073, 0x0071, 0x008a}, 
	{0x0000, 0x0074, 0x0074, 0x008b}, {0x0000, 0x0073, 0x0068, 0x809c}, 
	{0x0000, 0x006e, 0x003b, 0x008d}, {0x0000, 0x0074, 0x007e, 0x008e}, 
	{0x0000, 0x0074, 0x0078, 0x8091}, {0x0000, 0x0070, 0x004c, 0x8090}, 
	{0x0002, 0x0065, 0x809b, 0x0091}, {0x0001, 0x0068, 0x008f, 0x0092}, 
	{0x0000, 0x0070, 0x004e, 0x0093}, {0x0000, 0x0072, 0x0063, 0x8094}, 
	{0x0002, 0x0061, 0x0094, 0x8095}, {0x0002, 0x0065, 0x0095, 0x0096}, 
	{0x0000, 0x0074, 0x0082, 0x0097}, {0x0000, 0x0074, 0x0073, 0x0098}, 
	{0x0000, 0x0074, 0x007f, 0x0099}, {0x0000, 0x0073, 0x0064, 0x009a}, 
	{0x0000, 0x0072, 0x0058, 0x009b}, {0x0000, 0x0075, 0x0090, 0x009c}, 
	{0x0000, 0x0076, 0x008c, 0x009d}, {0x0000, 0x0076, 0x0083, 0x009e}, };
static const OBIndex HTMLElementIndices[]={
	{L"a"}, 
	{L"abbr"}, 
	{L"access"}, 
	{L"acronym"}, 
	{L"action"}, 
	{L"address"}, 
	{L"applet"}, 
	{L"area"}, 
	{L"article"}, 
	{L"aside"}, 
	{L"audio"}, 
	{L"b"}, 
	{L"base"}, 
	{L"basefont"}, 
	{L"bdo"}, 
	{L"big"}, 
	{L"blockcode"}, 
	{L"blockquote"}, 
	{L"body"}, 
	{L"br"}, 
	{L"button"}, 
	{L"canvas"}, 
	{L"caption"}, 
	{L"center"}, 
	{L"cite"}, 
	{L"code"}, 
	{L"col"}, 
	{L"colgroup"}, 
	{L"command"}, 
	{L"datalist"}, 
	{L"dd"}, 
	{L"del"}, 
	{L"delete"}, 
	{L"details"}, 
	{L"dfn"}, 
	{L"di"}, 
	{L"dir"}, 
	{L"dispatch"}, 
	{L"div"}, 
	{L"dl"}, 
	{L"dt"}, 
	{L"em"}, 
	{L"embed"}, 
	{L"fieldset"}, 
	{L"figcaption"}, 
	{L"figure"}, 
	{L"font"}, 
	{L"footer"}, 
	{L"form"}, 
	{L"frame"}, 
	{L"frameset"}, 
	{L"group"}, 
	{L"h"}, 
	{L"h1"}, 
	{L"h2"}, 
	{L"h3"}, 
	{L"h4"}, 
	{L"h5"}, 
	{L"h6"}, 
	{L"head"}, 
	{L"header"}, 
	{L"hgroup"}, 
	{L"hr"}, 
	{L"html"}, 
	{L"i"}, 
	{L"iframe"}, 
	{L"img"}, 
	{L"input"}, 
	{L"ins"}, 
	{L"insert"}, 
	{L"isindex"}, 
	{L"kbd"}, 
	{L"keygen"}, 
	{L"l"}, 
	{L"label"}, 
	{L"legend"}, 
	{L"li"}, 
	{L"link"}, 
	{L"listener"}, 
	{L"listing"}, 
	{L"load"}, 
	{L"map"}, 
	{L"mark"}, 
	{L"menu"}, 
	{L"message"}, 
	{L"meta"}, 
	{L"meter"}, 
	{L"model"}, 
	{L"nav"}, 
	{L"noframes"}, 
	{L"noscript"}, 
	{L"object"}, 
	{L"ol"}, 
	{L"optgroup"}, 
	{L"option"}, 
	{L"output"}, 
	{L"p"}, 
	{L"param"}, 
	{L"plaintext"}, 
	{L"pre"}, 
	{L"progress"}, 
	{L"q"}, 
	{L"range"}, 
	{L"rb"}, 
	{L"rbc"}, 
	{L"rebuild"}, 
	{L"recalculate"}, 
	{L"refresh"}, 
	{L"repeat"}, 
	{L"reset"}, 
	{L"revalidate"}, 
	{L"rp"}, 
	{L"rt"}, 
	{L"rtc"}, 
	{L"ruby"}, 
	{L"s"}, 
	{L"samp"}, 
	{L"script"}, 
	{L"secret"}, 
	{L"section"}, 
	{L"select"}, 
	{L"select1"}, 
	{L"send"}, 
	{L"separator"}, 
	{L"setfocus"}, 
	{L"setindex"}, 
	{L"setvalue"}, 
	{L"small"}, 
	{L"source"}, 
	{L"span"}, 
	{L"standby"}, 
	{L"strike"}, 
	{L"strong"}, 
	{L"style"}, 
	{L"sub"}, 
	{L"submit"}, 
	{L"summary"}, 
	{L"sup"}, 
	{L"switch"}, 
	{L"table"}, 
	{L"tbody"}, 
	{L"td"}, 
	{L"textarea"}, 
	{L"tfoot"}, 
	{L"th"}, 
	{L"thead"}, 
	{L"time"}, 
	{L"title"}, 
	{L"tr"}, 
	{L"track"}, 
	{L"trigger"}, 
	{L"tt"}, 
	{L"u"}, 
	{L"ul"}, 
	{L"upload"}, 
	{L"var"}, 
	{L"video"}, 
	{L"wbr"}, 
	{L"xmp"}, };


static OBSelector HTMLElementSelector(HTMLElementNodes, HTMLElementIndices);

TWHTMLElementType HTMLElementTypeForName(const wchar_t *name){
	if(name[0]==L'#')
		return TWHTMLElementTypeUnknown;
	return (TWHTMLElementType)(HTMLElementSelector.leafIndexForKey(name)+1);
}
