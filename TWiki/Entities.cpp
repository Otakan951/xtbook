//
//  Entities.cpp
//  XTBook
//
//  Created by Nexhawks on 4/27/11.
//  Copyright 2011 Nexhawks. All rights reserved.
//
/*
 * This file is part of XTBook.
 *
 * XTBook is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * XTBook is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with XTBook.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "Entities.h"


#include "../OptimizedBranch/OBSelector.h"

static const OBNode EntitiesNodes[]={
	{0x0000, 0x0051, 0x8001, 0x8002}, {0x0001, 0x0062, 0x8004, 0x8006}, 
	{0x0001, 0x0062, 0x801a, 0x8003}, {0x0002, 0x006f, 0x8005, 0x8007}, 
	{0x0001, 0x0053, 0x808c, 0x8029}, {0x0001, 0x0064, 0x801c, 0x8008}, 
	{0x0001, 0x0065, 0x801b, 0x8009}, {0x0001, 0x0065, 0x8015, 0x800a}, 
	{0x0001, 0x0069, 0x801d, 0x800c}, {0x0001, 0x006a, 0x8016, 0x800e}, 
	{0x0001, 0x006a, 0x8017, 0x800b}, {0x0001, 0x006d, 0x8022, 0x8010}, 
	{0x0001, 0x006d, 0x802f, 0x800d}, {0x0002, 0x0066, 0x8025, 0x800f}, 
	{0x0001, 0x006f, 0x8091, 0x8011}, {0x0001, 0x0070, 0x8023, 0x8012}, 
	{0x0001, 0x0070, 0x8024, 0x8018}, {0x0001, 0x0073, 0x803a, 0x8013}, 
	{0x0001, 0x0073, 0x8071, 0x8014}, {0x0001, 0x0075, 0x803d, 0x8041}, 
	{0x0001, 0x0075, 0x8040, 0x8019}, {0x0000, 0x0062, 0x0004, 0x806c}, 
	{0x0000, 0x0042, 0x0007, 0x801f}, {0x0000, 0x0062, 0x80bc, 0x8021}, 
	{0x0000, 0x0062, 0x80eb, 0x8026}, {0x0000, 0x0062, 0x80ed, 0x8042}, 
	{0x0000, 0x0062, 0x80d5, 0x8028}, {0x0000, 0x0042, 0x0002, 0x8033}, 
	{0x0000, 0x0062, 0x80c2, 0x8034}, {0x0000, 0x0062, 0x80d8, 0x801e}, 
	{0x0002, 0x0069, 0x802c, 0x8020}, {0x0000, 0x0043, 0x0017, 0x802d}, 
	{0x0001, 0x0067, 0x802e, 0x80a5}, {0x0000, 0x0063, 0x0018, 0x8030}, 
	{0x0000, 0x0062, 0x000b, 0x80a9}, {0x0000, 0x0062, 0x000e, 0x805b}, 
	{0x0000, 0x0062, 0x000c, 0x8037}, {0x0000, 0x0062, 0x000d, 0x803e}, 
	{0x0000, 0x0063, 0x0019, 0x8027}, {0x0002, 0x0071, 0x80ad, 0x803b}, 
	{0x0000, 0x0064, 0x001b, 0x802a}, {0x0000, 0x0043, 0x0000, 0x8031}, 
	{0x0002, 0x006d, 0x8032, 0x802b}, {0x0001, 0x0051, 0x8050, 0x804c}, 
	{0x0000, 0x0064, 0x001e, 0x804d}, {0x0000, 0x0044, 0x0020, 0x8035}, 
	{0x0000, 0x0064, 0x001f, 0x8052}, {0x0000, 0x0063, 0x80c7, 0x8077}, 
	{0x0000, 0x0064, 0x0022, 0x8036}, {0x0000, 0x0045, 0x002a, 0x803f}, 
	{0x0000, 0x0065, 0x0029, 0x8054}, {0x0000, 0x0044, 0x001c, 0x8055}, 
	{0x0000, 0x0064, 0x001d, 0x8056}, {0x0000, 0x0045, 0x002e, 0x8058}, 
	{0x0000, 0x0065, 0x0031, 0x8057}, {0x0000, 0x0064, 0x0025, 0x8038}, 
	{0x0002, 0x0072, 0x8045, 0x8039}, {0x0001, 0x006e, 0x0039, 0x8046}, 
	{0x0000, 0x0043, 0x000f, 0x805d}, {0x0000, 0x0064, 0x0028, 0x803c}, 
	{0x0001, 0x0071, 0x80ea, 0x8043}, {0x0000, 0x0043, 0x0012, 0x8084}, 
	{0x0000, 0x0064, 0x0026, 0x8047}, {0x0001, 0x005b, 0x0040, 0x804b}, 
	{0x0000, 0x0063, 0x0013, 0x8060}, {0x0000, 0x0043, 0x0014, 0x8061}, 
	{0x0000, 0x0064, 0x001a, 0x8044}, {0x0001, 0x0073, 0x805f, 0x8073}, 
	{0x0001, 0x0077, 0x8062, 0x80d4}, {0x0000, 0x0066, 0x0038, 0x0046}, 
	{0x0000, 0x0066, 0x003a, 0x805c}, {0x0000, 0x0066, 0x003f, 0x8048}, 
	{0x0005, 0x0033, 0x804a, 0x8049}, {0x0004, 0x0032, 0x0049, 0x8072}, 
	{0x0003, 0x006b, 0x804e, 0x8098}, {0x0000, 0x0046, 0x0032, 0x8053}, 
	{0x0000, 0x0066, 0x002b, 0x804f}, {0x0000, 0x0066, 0x002d, 0x8051}, 
	{0x0000, 0x0067, 0x0048, 0x805a}, {0x0000, 0x0068, 0x004d, 0x8064}, 
	{0x0000, 0x0066, 0x002c, 0x806a}, {0x0000, 0x0068, 0x004e, 0x806d}, 
	{0x0000, 0x0066, 0x002f, 0x806e}, {0x0000, 0x0048, 0x004c, 0x8063}, 
	{0x0000, 0x0067, 0x0033, 0x8075}, {0x0000, 0x0047, 0x0034, 0x808a}, 
	{0x0000, 0x0067, 0x0035, 0x806b}, {0x0000, 0x0067, 0x0037, 0x8059}, 
	{0x0000, 0x0047, 0x0036, 0x808e}, {0x0001, 0x0066, 0x80a2, 0x808f}, 
	{0x0000, 0x0068, 0x004f, 0x8074}, {0x0000, 0x0066, 0x0024, 0x8094}, 
	{0x0000, 0x0068, 0x0047, 0x805e}, {0x0000, 0x0047, 0x003b, 0x80ac}, 
	{0x0001, 0x006f, 0x005d, 0x806f}, {0x0000, 0x0067, 0x003d, 0x0060}, 
	{0x0000, 0x0067, 0x0041, 0x8085}, {0x0000, 0x0047, 0x0042, 0x807a}, 
	{0x0000, 0x0067, 0x0043, 0x809f}, {0x0000, 0x004a, 0x0054, 0x8065}, 
	{0x0000, 0x006a, 0x0050, 0x8066}, {0x0000, 0x004c, 0x0064, 0x8088}, 
	{0x0000, 0x006c, 0x0065, 0x8067}, {0x0002, 0x006e, 0x0067, 0x8068}, 
	{0x0002, 0x0070, 0x80b3, 0x8069}, {0x0002, 0x0072, 0x80b4, 0x80a0}, 
	{0x0000, 0x006a, 0x0051, 0x80b6}, {0x0000, 0x006b, 0x0057, 0x808b}, 
	{0x0000, 0x0067, 0x0016, 0x807d}, {0x0000, 0x006a, 0x0052, 0x8076}, 
	{0x0000, 0x006a, 0x0053, 0x808d}, {0x0000, 0x006b, 0x005f, 0x8070}, 
	{0x0002, 0x0079, 0x8081, 0x0071}, {0x0000, 0x0067, 0x0010, 0x8095}, 
	{0x0000, 0x0069, 0x004a, 0x80bf}, {0x0000, 0x0069, 0x0044, 0x8083}, 
	{0x0000, 0x006b, 0x005b, 0x807b}, {0x0000, 0x006b, 0x0055, 0x807c}, 
	{0x0000, 0x006d, 0x006e, 0x807e}, {0x0000, 0x0069, 0x0030, 0x8078}, 
	{0x0002, 0x0064, 0x8080, 0x8079}, {0x0002, 0x0069, 0x80c8, 0x8090}, 
	{0x0000, 0x004b, 0x0062, 0x8086}, {0x0000, 0x006d, 0x0075, 0x8087}, 
	{0x0000, 0x006e, 0x0076, 0x8089}, {0x0000, 0x006d, 0x006d, 0x80b8}, 
	{0x0000, 0x006e, 0x0077, 0x807f}, {0x0001, 0x0065, 0x007f, 0x80b9}, 
	{0x0000, 0x006e, 0x0078, 0x80a7}, {0x0000, 0x006d, 0x0070, 0x8082}, 
	{0x0003, 0x0069, 0x0082, 0x80aa}, {0x0000, 0x006d, 0x0074, 0x80c0}, 
	{0x0000, 0x004a, 0x003e, 0x8099}, {0x0000, 0x006c, 0x0061, 0x809a}, 
	{0x0000, 0x004e, 0x007b, 0x809e}, {0x0000, 0x006e, 0x007c, 0x8092}, 
	{0x0000, 0x004e, 0x0066, 0x0089}, {0x0000, 0x006f, 0x007d, 0x80b2}, 
	{0x0000, 0x004c, 0x0056, 0x008b}, {0x0000, 0x006e, 0x006c, 0x80b7}, 
	{0x0000, 0x0048, 0x0005, 0x008d}, {0x0000, 0x006e, 0x006f, 0x80bb}, 
	{0x0000, 0x004c, 0x0059, 0x80a4}, {0x0000, 0x006c, 0x005a, 0x80a8}, 
	{0x0000, 0x006e, 0x007a, 0x80be}, {0x0000, 0x0048, 0x000a, 0x8093}, 
	{0x0000, 0x006f, 0x0088, 0x8096}, {0x0002, 0x0067, 0x0092, 0x0094}, 
	{0x0000, 0x006c, 0x005c, 0x80e9}, {0x0000, 0x006e, 0x0072, 0x80ab}, 
	{0x0001, 0x0070, 0x0093, 0x8097}, {0x0002, 0x0064, 0x80cc, 0x0098}, 
	{0x0000, 0x006b, 0x004b, 0x0099}, {0x0000, 0x004f, 0x0085, 0x809b}, 
	{0x0000, 0x006f, 0x0086, 0x809c}, {0x0001, 0x0074, 0x80af, 0x009c}, 
	{0x0001, 0x0074, 0x80b0, 0x809d}, {0x0003, 0x006d, 0x009d, 0x009e}, 
	{0x0000, 0x004f, 0x0087, 0x009f}, {0x0000, 0x006c, 0x0063, 0x80ce}, 
	{0x0000, 0x006e, 0x006a, 0x80a1}, {0x0003, 0x006b, 0x80d6, 0x80b5}, 
	{0x0000, 0x006d, 0x0058, 0x80a3}, {0x0003, 0x006f, 0x80f8, 0x00a4}, 
	{0x0000, 0x0050, 0x008f, 0x80a6}, {0x0000, 0x006a, 0x0021, 0x80db}, 
	{0x0001, 0x0069, 0x00a5, 0x00a7}, {0x0000, 0x006f, 0x0081, 0x80f1}, 
	{0x0000, 0x0070, 0x0090, 0x80bd}, {0x0000, 0x006a, 0x0023, 0x00aa}, 
	{0x0000, 0x006f, 0x0083, 0x00ab}, {0x0000, 0x0070, 0x0096, 0x00ac}, 
	{0x0000, 0x004d, 0x005e, 0x00ad}, {0x0000, 0x006a, 0x0027, 0x80ae}, 
	{0x0003, 0x006a, 0x80cf, 0x80b1}, {0x0000, 0x0050, 0x009a, 0x00b0}, 
	{0x0000, 0x0070, 0x009b, 0x00b1}, {0x0000, 0x0071, 0x00af, 0x00b2}, 
	{0x0000, 0x0071, 0x008a, 0x80e2}, {0x0000, 0x006f, 0x0068, 0x00b4}, 
	{0x0000, 0x006f, 0x0069, 0x00b5}, {0x0000, 0x0071, 0x00a2, 0x80e3}, 
	{0x0000, 0x006f, 0x006b, 0x80e4}, {0x0000, 0x0071, 0x008c, 0x80c3}, 
	{0x0000, 0x0070, 0x007e, 0x80c1}, {0x0000, 0x0070, 0x0080, 0x80ba}, 
	{0x0002, 0x0064, 0x80c5, 0x80d7}, {0x0000, 0x0071, 0x008e, 0x80ef}, 
	{0x0000, 0x005a, 0x80e7, 0x80f7}, {0x0000, 0x0071, 0x00a9, 0x80c6}, 
	{0x0000, 0x0071, 0x0091, 0x80ca}, {0x0000, 0x006f, 0x0073, 0x80cb}, 
	{0x0000, 0x0070, 0x0084, 0x00c1}, {0x0000, 0x0073, 0x00b9, 0x80c4}, 
	{0x0000, 0x005a, 0x80e5, 0x0003}, {0x0000, 0x0073, 0x00b8, 0x80e6}, 
	{0x0001, 0x0063, 0x00c2, 0x00c5}, {0x0000, 0x0073, 0x00ba, 0x00c6}, 
	{0x0000, 0x0073, 0x00be, 0x80dd}, {0x0000, 0x005a, 0x80f0, 0x0009}, 
	{0x0000, 0x0070, 0x0079, 0x80c9}, {0x0005, 0x0066, 0x00c9, 0x00ca}, 
	{0x0000, 0x0073, 0x00bf, 0x80de}, {0x0000, 0x0073, 0x00c0, 0x00cc}, 
	{0x0000, 0x0071, 0x0097, 0x80cd}, {0x0003, 0x0065, 0x80e0, 0x00ce}, 
	{0x0000, 0x0071, 0x00a0, 0x80ee}, {0x0000, 0x0072, 0x00ae, 0x80d0}, 
	{0x0003, 0x0031, 0x00d0, 0x80d1}, {0x0003, 0x0032, 0x00d1, 0x80d2}, 
	{0x0003, 0x0033, 0x00d2, 0x80d3}, {0x0003, 0x004c, 0x00d3, 0x00d4}, 
	{0x0000, 0x006c, 0x0045, 0x80f9}, {0x0000, 0x005b, 0x80dc, 0x0001}, 
	{0x0000, 0x0072, 0x00a1, 0x00d7}, {0x0000, 0x0073, 0x00bb, 0x80d9}, 
	{0x0000, 0x005b, 0x00d9, 0x0006}, {0x0003, 0x0073, 0x00d8, 0x80da}, 
	{0x0005, 0x0073, 0x00da, 0x00db}, {0x0000, 0x0072, 0x00a6, 0x00dc}, 
	{0x0001, 0x0055, 0x00dd, 0x80e1}, {0x0000, 0x0074, 0x00c7, 0x80e8}, 
	{0x0000, 0x0074, 0x00cb, 0x80df}, {0x0002, 0x006d, 0x00df, 0x00e0}, 
	{0x0000, 0x0074, 0x00cd, 0x00e1}, {0x0000, 0x0055, 0x00d6, 0x80f2}, 
	{0x0000, 0x0074, 0x00b3, 0x80f3}, {0x0000, 0x0074, 0x00b6, 0x00e4}, 
	{0x0000, 0x0074, 0x00b7, 0x00e5}, {0x0000, 0x0054, 0x00c3, 0x00e6}, 
	{0x0000, 0x0074, 0x00c4, 0x00e7}, {0x0000, 0x0054, 0x00bd, 0x00e8}, 
	{0x0000, 0x0075, 0x00de, 0x00e9}, {0x0000, 0x0072, 0x0095, 0x00ea}, 
	{0x0000, 0x006d, 0x003c, 0x80ec}, {0x0000, 0x005b, 0x00ec, 0x0011}, 
	{0x0004, 0x006a, 0x00eb, 0x00ed}, {0x0000, 0x005b, 0x80f5, 0x0015}, 
	{0x0000, 0x0074, 0x00cf, 0x80f6}, {0x0000, 0x0075, 0x00bc, 0x80f4}, 
	{0x0000, 0x0056, 0x00c8, 0x00f1}, {0x0000, 0x0074, 0x00a8, 0x00f2}, 
	{0x0000, 0x0057, 0x00e2, 0x00f3}, {0x0000, 0x0077, 0x00e3, 0x00f4}, 
	{0x0000, 0x0078, 0x00f0, 0x00f5}, {0x0000, 0x0057, 0x00ee, 0x00f6}, 
	{0x0000, 0x0077, 0x00ef, 0x00f7}, {0x0000, 0x005e, 0x00f8, 0x0008}, 
	{0x0000, 0x0075, 0x00a3, 0x00f9}, {0x0000, 0x0077, 0x00d5, 0x80fa}, 
	{0x0002, 0x006c, 0x00fa, 0x00fb}, };
static const OBIndex EntitiesIndices[]={
	{L"Aacute"}, 
	{L"aacute"}, 
	{L"Acirc"}, 
	{L"acirc"}, 
	{L"acute"}, 
	{L"AElig"}, 
	{L"aelig"}, 
	{L"Agrave"}, 
	{L"agrave"}, 
	{L"alefsym"}, 
	{L"Alpha"}, 
	{L"alpha"}, 
	{L"amp"}, 
	{L"and"}, 
	{L"ang"}, 
	{L"Aring"}, 
	{L"aring"}, 
	{L"asymp"}, 
	{L"Atilde"}, 
	{L"atilde"}, 
	{L"Auml"}, 
	{L"auml"}, 
	{L"bdquo"}, 
	{L"Beta"}, 
	{L"beta"}, 
	{L"brvbar"}, 
	{L"bull"}, 
	{L"cap"}, 
	{L"Ccedil"}, 
	{L"ccedil"}, 
	{L"cedil"}, 
	{L"cent"}, 
	{L"Chi"}, 
	{L"chi"}, 
	{L"circ"}, 
	{L"clubs"}, 
	{L"cong"}, 
	{L"copy"}, 
	{L"crarr"}, 
	{L"cup"}, 
	{L"curren"}, 
	{L"dagger"}, 
	{L"Dagger"}, 
	{L"darr"}, 
	{L"dArr"}, 
	{L"deg"}, 
	{L"Delta"}, 
	{L"delta"}, 
	{L"diams"}, 
	{L"divide"}, 
	{L"Eacute"}, 
	{L"eacute"}, 
	{L"Ecirc"}, 
	{L"ecirc"}, 
	{L"Egrave"}, 
	{L"egrave"}, 
	{L"empty"}, 
	{L"emsp"}, 
	{L"ensp"}, 
	{L"Epsilon"}, 
	{L"epsilon"}, 
	{L"equiv"}, 
	{L"Eta"}, 
	{L"eta"}, 
	{L"ETH"}, 
	{L"eth"}, 
	{L"Euml"}, 
	{L"euml"}, 
	{L"euro"}, 
	{L"exist"}, 
	{L"fnof"}, 
	{L"forall"}, 
	{L"frac12"}, 
	{L"frac14"}, 
	{L"frac34"}, 
	{L"frasl"}, 
	{L"Gamma"}, 
	{L"gamma"}, 
	{L"ge"}, 
	{L"gt"}, 
	{L"harr"}, 
	{L"hArr"}, 
	{L"hearts"}, 
	{L"hellip"}, 
	{L"Iacute"}, 
	{L"iacute"}, 
	{L"Icirc"}, 
	{L"icirc"}, 
	{L"iexcl"}, 
	{L"Igrave"}, 
	{L"igrave"}, 
	{L"image"}, 
	{L"infin"}, 
	{L"int"}, 
	{L"Iota"}, 
	{L"iota"}, 
	{L"iquest"}, 
	{L"isin"}, 
	{L"Iuml"}, 
	{L"iuml"}, 
	{L"Kappa"}, 
	{L"kappa"}, 
	{L"Lambda"}, 
	{L"lambda"}, 
	{L"lang"}, 
	{L"laquo"}, 
	{L"larr"}, 
	{L"lArr"}, 
	{L"lceil"}, 
	{L"ldquo"}, 
	{L"le"}, 
	{L"lfloor"}, 
	{L"lowast"}, 
	{L"loz"}, 
	{L"lrm"}, 
	{L"lsaquo"}, 
	{L"lsquo"}, 
	{L"lt"}, 
	{L"macr"}, 
	{L"mdash"}, 
	{L"micro"}, 
	{L"middot"}, 
	{L"minus"}, 
	{L"Mu"}, 
	{L"mu"}, 
	{L"nabla"}, 
	{L"nbsp"}, 
	{L"ndash"}, 
	{L"ne"}, 
	{L"ni"}, 
	{L"not"}, 
	{L"notin"}, 
	{L"nsub"}, 
	{L"Ntilde"}, 
	{L"ntilde"}, 
	{L"Nu"}, 
	{L"nu"}, 
	{L"Oacute"}, 
	{L"oacute"}, 
	{L"Ocirc"}, 
	{L"ocirc"}, 
	{L"OElig"}, 
	{L"oelig"}, 
	{L"Ograve"}, 
	{L"ograve"}, 
	{L"oline"}, 
	{L"Omega"}, 
	{L"omega"}, 
	{L"Omicron"}, 
	{L"omicron"}, 
	{L"oplus"}, 
	{L"or"}, 
	{L"ordf"}, 
	{L"ordm"}, 
	{L"Oslash"}, 
	{L"oslash"}, 
	{L"Otilde"}, 
	{L"otilde"}, 
	{L"otimes"}, 
	{L"Ouml"}, 
	{L"ouml"}, 
	{L"para"}, 
	{L"part"}, 
	{L"permil"}, 
	{L"perp"}, 
	{L"Phi"}, 
	{L"phi"}, 
	{L"Pi"}, 
	{L"pi"}, 
	{L"piv"}, 
	{L"plusmn"}, 
	{L"pound"}, 
	{L"prime"}, 
	{L"Prime"}, 
	{L"prod"}, 
	{L"prop"}, 
	{L"Psi"}, 
	{L"psi"}, 
	{L"quot"}, 
	{L"radic"}, 
	{L"rang"}, 
	{L"raquo"}, 
	{L"rarr"}, 
	{L"rArr"}, 
	{L"rceil"}, 
	{L"rdquo"}, 
	{L"real"}, 
	{L"reg"}, 
	{L"rfloor"}, 
	{L"Rho"}, 
	{L"rho"}, 
	{L"rlm"}, 
	{L"rsaquo"}, 
	{L"rsquo"}, 
	{L"sbquo"}, 
	{L"Scaron"}, 
	{L"scaron"}, 
	{L"sdot"}, 
	{L"sect"}, 
	{L"shy"}, 
	{L"Sigma"}, 
	{L"sigma"}, 
	{L"sigmaf"}, 
	{L"sim"}, 
	{L"spades"}, 
	{L"sub"}, 
	{L"sube"}, 
	{L"sum"}, 
	{L"sup"}, 
	{L"sup1"}, 
	{L"sup2"}, 
	{L"sup3"}, 
	{L"supe"}, 
	{L"szlig"}, 
	{L"Tau"}, 
	{L"tau"}, 
	{L"there4"}, 
	{L"Theta"}, 
	{L"theta"}, 
	{L"thetasym"}, 
	{L"thinsp"}, 
	{L"THORN"}, 
	{L"thorn"}, 
	{L"tilde"}, 
	{L"times"}, 
	{L"trade"}, 
	{L"Uacute"}, 
	{L"uacute"}, 
	{L"uarr"}, 
	{L"uArr"}, 
	{L"Ucirc"}, 
	{L"ucirc"}, 
	{L"Ugrave"}, 
	{L"ugrave"}, 
	{L"uml"}, 
	{L"upsih"}, 
	{L"Upsilon"}, 
	{L"upsilon"}, 
	{L"Uuml"}, 
	{L"uuml"}, 
	{L"weierp"}, 
	{L"Xi"}, 
	{L"xi"}, 
	{L"Yacute"}, 
	{L"yacute"}, 
	{L"yen"}, 
	{L"Yuml"}, 
	{L"yuml"}, 
	{L"Zeta"}, 
	{L"zeta"}, 
	{L"zwj"}, 
	{L"zwnj"}, };


static const wchar_t Entities[]={
	(wchar_t)0x00c1,(wchar_t)0x00e1,(wchar_t)0x00c2,(wchar_t)0x00e2,
	(wchar_t)0x00b4,(wchar_t)0x00c6,(wchar_t)0x00e6,(wchar_t)0x00c0,
	(wchar_t)0x00e0,(wchar_t)0x2135,(wchar_t)0x0391,(wchar_t)0x03b1,
	(wchar_t)0x0026,(wchar_t)0x2227,(wchar_t)0x2220,(wchar_t)0x00c5,
	(wchar_t)0x00e5,(wchar_t)0x2248,(wchar_t)0x00c3,(wchar_t)0x00e3,
	(wchar_t)0x00c4,(wchar_t)0x00e4,(wchar_t)0x201e,(wchar_t)0x0392,
	(wchar_t)0x03b2,(wchar_t)0x00a6,(wchar_t)0x2022,(wchar_t)0x2229,
	(wchar_t)0x00c7,(wchar_t)0x00e7,(wchar_t)0x00b8,(wchar_t)0x00a2,
	(wchar_t)0x03a7,(wchar_t)0x03c7,(wchar_t)0x02c6,(wchar_t)0x2663,
	(wchar_t)0x2245,(wchar_t)0x00a9,(wchar_t)0x21b5,(wchar_t)0x222a,
	(wchar_t)0x00a4,(wchar_t)0x2020,(wchar_t)0x2021,(wchar_t)0x2193,
	(wchar_t)0x21d3,(wchar_t)0x00b0,(wchar_t)0x0394,(wchar_t)0x03b4,
	(wchar_t)0x2666,(wchar_t)0x00f7,(wchar_t)0x00c9,(wchar_t)0x00e9,
	(wchar_t)0x00ca,(wchar_t)0x00ea,(wchar_t)0x00c8,(wchar_t)0x00e8,
	(wchar_t)0x2205,(wchar_t)0x2003,(wchar_t)0x2002,(wchar_t)0x0395,
	(wchar_t)0x03b5,(wchar_t)0x2261,(wchar_t)0x0397,(wchar_t)0x03b7,
	(wchar_t)0x00d0,(wchar_t)0x00f0,(wchar_t)0x00cb,(wchar_t)0x00eb,
	(wchar_t)0x20ac,(wchar_t)0x2203,(wchar_t)0x0192,(wchar_t)0x2200,
	(wchar_t)0x00bd,(wchar_t)0x00bc,(wchar_t)0x00be,(wchar_t)0x2044,
	(wchar_t)0x0393,(wchar_t)0x03b3,(wchar_t)0x2265,(wchar_t)0x003e,
	(wchar_t)0x2194,(wchar_t)0x21d4,(wchar_t)0x2665,(wchar_t)0x2026,
	(wchar_t)0x00cd,(wchar_t)0x00ed,(wchar_t)0x00ce,(wchar_t)0x00ee,
	(wchar_t)0x00a1,(wchar_t)0x00cc,(wchar_t)0x00ec,(wchar_t)0x2111,
	(wchar_t)0x221e,(wchar_t)0x222b,(wchar_t)0x0399,(wchar_t)0x03b9,
	(wchar_t)0x00bf,(wchar_t)0x2208,(wchar_t)0x00cf,(wchar_t)0x00ef,
	(wchar_t)0x039a,(wchar_t)0x03ba,(wchar_t)0x039b,(wchar_t)0x03bb,
	(wchar_t)0x2329,(wchar_t)0x00ab,(wchar_t)0x2190,(wchar_t)0x21d0,
	(wchar_t)0x2308,(wchar_t)0x201c,(wchar_t)0x2264,(wchar_t)0x230a,
	(wchar_t)0x2217,(wchar_t)0x25ca,(wchar_t)0x200e,(wchar_t)0x2039,
	(wchar_t)0x2018,(wchar_t)0x003c,(wchar_t)0x00af,(wchar_t)0x2014,
	(wchar_t)0x00b5,(wchar_t)0x00b7,(wchar_t)0x2212,(wchar_t)0x039c,
	(wchar_t)0x03bc,(wchar_t)0x2207,(wchar_t)0x00a0,(wchar_t)0x2013,
	(wchar_t)0x2260,(wchar_t)0x220b,(wchar_t)0x00ac,(wchar_t)0x2209,
	(wchar_t)0x2284,(wchar_t)0x00d1,(wchar_t)0x00f1,(wchar_t)0x039d,
	(wchar_t)0x03bd,(wchar_t)0x00d3,(wchar_t)0x00f3,(wchar_t)0x00d4,
	(wchar_t)0x00f4,(wchar_t)0x0152,(wchar_t)0x0153,(wchar_t)0x00d2,
	(wchar_t)0x00f2,(wchar_t)0x203e,(wchar_t)0x03a9,(wchar_t)0x03c9,
	(wchar_t)0x039f,(wchar_t)0x03bf,(wchar_t)0x2295,(wchar_t)0x2228,
	(wchar_t)0x00aa,(wchar_t)0x00ba,(wchar_t)0x00d8,(wchar_t)0x00f8,
	(wchar_t)0x00d5,(wchar_t)0x00f5,(wchar_t)0x2297,(wchar_t)0x00d6,
	(wchar_t)0x00f6,(wchar_t)0x00b6,(wchar_t)0x2202,(wchar_t)0x2030,
	(wchar_t)0x22a5,(wchar_t)0x03a6,(wchar_t)0x03c6,(wchar_t)0x03a0,
	(wchar_t)0x03c0,(wchar_t)0x03d6,(wchar_t)0x00b1,(wchar_t)0x00a3,
	(wchar_t)0x2032,(wchar_t)0x2033,(wchar_t)0x220f,(wchar_t)0x221d,
	(wchar_t)0x03a8,(wchar_t)0x03c8,(wchar_t)0x0022,(wchar_t)0x221a,
	(wchar_t)0x232a,(wchar_t)0x00bb,(wchar_t)0x2192,(wchar_t)0x21d2,
	(wchar_t)0x2309,(wchar_t)0x201d,(wchar_t)0x211c,(wchar_t)0x00ae,
	(wchar_t)0x230b,(wchar_t)0x03a1,(wchar_t)0x03c1,(wchar_t)0x200f,
	(wchar_t)0x203a,(wchar_t)0x2019,(wchar_t)0x201a,(wchar_t)0x0160,
	(wchar_t)0x0161,(wchar_t)0x22c5,(wchar_t)0x00a7,(wchar_t)0x00ad,
	(wchar_t)0x03a3,(wchar_t)0x03c3,(wchar_t)0x03c2,(wchar_t)0x223c,
	(wchar_t)0x2660,(wchar_t)0x2282,(wchar_t)0x2286,(wchar_t)0x2211,
	(wchar_t)0x2283,(wchar_t)0x00b9,(wchar_t)0x00b2,(wchar_t)0x00b3,
	(wchar_t)0x2287,(wchar_t)0x00df,(wchar_t)0x03a4,(wchar_t)0x03c4,
	(wchar_t)0x2234,(wchar_t)0x0398,(wchar_t)0x03b8,(wchar_t)0x03d1,
	(wchar_t)0x2009,(wchar_t)0x00de,(wchar_t)0x00fe,(wchar_t)0x02dc,
	(wchar_t)0x00d7,(wchar_t)0x2122,(wchar_t)0x00da,(wchar_t)0x00fa,
	(wchar_t)0x2191,(wchar_t)0x21d1,(wchar_t)0x00db,(wchar_t)0x00fb,
	(wchar_t)0x00d9,(wchar_t)0x00f9,(wchar_t)0x00a8,(wchar_t)0x03d2,
	(wchar_t)0x03a5,(wchar_t)0x03c5,(wchar_t)0x00dc,(wchar_t)0x00fc,
	(wchar_t)0x2118,(wchar_t)0x039e,(wchar_t)0x03be,(wchar_t)0x00dd,
	(wchar_t)0x00fd,(wchar_t)0x00a5,(wchar_t)0x0178,(wchar_t)0x00ff,
	(wchar_t)0x0396,(wchar_t)0x03b6,(wchar_t)0x200d,(wchar_t)0x200c,
};

static OBSelector EntitiesSelector(EntitiesNodes, EntitiesIndices);

wchar_t charForEntity(const wchar_t *name){
	uint16_t index=EntitiesSelector.leafIndexForKey(name);
	if(index==OBNodeNotFound)
		return 0;
	return Entities[index];
}

